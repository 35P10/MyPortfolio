<span style=@Style>@DisplayText</span>

@code {
    [Parameter]
    public String Text { get; set; } = "";

    [Parameter]
    public String Style { get; set; } = "color: var(--font-color-negative);";

    [Parameter]
    public int Speed { get; set; } = 100;

    [Parameter]
    public int Delay { get; set; } = 1000;

    [Parameter]
    public EventCallback OnComplete { get; set; }

    private string DisplayText { get; set; }

    public bool isFinish { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        DisplayText = "";
        isFinish = false;
        TypeWriterEffect();
    }

    private async Task TypeWriterEffect()
    {
        foreach (char c in Text)
        {
            DisplayText += c;
            StateHasChanged();
            await Task.Delay(Speed);
        }
        await Task.Delay(Delay);
        isFinish = true;
        await OnComplete.InvokeAsync();
    }
}
