@using MyPortfolio.Components.Windows.Tab

<div class="window box-shadow @WindowClass">
    <div class="window-header">
		<h3>@Title</h3>
		<button type="button"
				class="box-shadow"
		>
			X
		</button>
    </div>
		<CascadingValue Value="this">
	<div class="window-content-section tab-window">
			<div class="tab-section">
				@foreach (TabPage tabPage in Pages)
				{
					<button type="button"
							class="box-shadow @GetButtonClass(tabPage)"
							@onclick=@( () => ActivatePage(tabPage) )>
						@tabPage.Text
					</button>
				}
			</div>
			<div class="window-content">
				@ChildContent
			</div>
	</div>
		</CascadingValue>
</div>

@code {
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public string Height { get; set; } = "120px";

	[Parameter]
	public String Title { get; set; }

	[Parameter]
	public string WindowClass { get; set; } = "";

	public TabPage ActivePage { get; set; }
	List<TabPage> Pages = new List<TabPage>();

	internal void AddPage(TabPage tabPage)
	{
		Pages.Add(tabPage);
		if (Pages.Count == 1)
			ActivePage = tabPage;
		StateHasChanged();
	}

	string GetHeight()
	{
		return "height :" + Height;
	}

	string GetButtonClass(TabPage page)
	{
		return page == ActivePage ? "button-selected" : "button-unselected";
	}

	void ActivatePage(TabPage page)
	{
		ActivePage = page;
	}
}
