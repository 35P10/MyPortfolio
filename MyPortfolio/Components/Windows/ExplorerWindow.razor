@using MyPortfolio.Components.Windows.Tab

<div id=@Id class ="window box-shadow">
	<div class="window-header">
		<h3>@Title</h3>
		<button type="button"
				class="box-shadow">
			X
		</button>
	</div>
	<CascadingValue Value="this">
		<div class="window-content-section explorer-window">
			<div class="explorer-window-tabs box-shadow-2 explorer-tab">
				<div class="group-section box-shadow-sub">
					<div class="explorer-option" style="padding: 3px 0;">
						📁35P10:\Projects
					</div>
					@foreach (var key in Projects.Keys)
					{
						<button class="explorer-option @GetButtonClass(key)" type="button"
								@onclick=@( () => ActivateGroup(key) )>
							@key
						</button>
					}
				</div>
				<hr />
				<div class="tab-section box-shadow-sub">
						@if (Projects.Count > 0)
						{
							@foreach (ExplorerTab tabPage in Projects[ActiveGroup])
							{
								<button type="button"
									class="explorer-option @GetButtonClass(tabPage)"
										@onclick=@( () => ActivatePage(tabPage) )>
									@tabPage.Title
								</button>
							}
						}
				</div>
			</div>
			<div class="explorer-window-content box-shadow-sub-2 explorer-tab">
				<p class="input-box"><span class="box-shadow-sub">@Path</span></p>
				<div style="display: block; @GetHeight()">
					@ChildContent
				</div>
			</div>
		</div>
	</CascadingValue>
</div>

@code {
	[Parameter]
	public RenderFragment ChildContent { get; set; }

	[Parameter]
	public string Height { get; set; } = "360px";

	[Parameter]
	public String Title { get; set; }

	[Parameter]
	public String Id { get; set; }

	public String ActiveGroup { get; set; }
	public ExplorerTab ActivePage { get; set; }
	Dictionary<string, List<ExplorerTab>> Projects = new Dictionary<string, List<ExplorerTab>>();
	private String Path { get; set; } = "35P10:\\Projects\\";

	internal void AddPage(ExplorerTab tabPage)
	{
		if (!Projects.ContainsKey(tabPage.Group))
		{
			Projects[tabPage.Group] = new List<ExplorerTab>();
		}
		Projects[tabPage.Group].Add(tabPage);

		if (Projects.Count == 1)
		{
			ActiveGroup = tabPage.Group;
			ActivePage = tabPage;
			ActivatePage(tabPage);
		}
		StateHasChanged();
	}

	string GetHeight()
	{
		return "height :" + Height;
	}

	string GetButtonClass(ExplorerTab page)
	{
		return page == ActivePage ? "explorer-option-selected" : "button-unselected";
	}

	string GetButtonClass(string group)
	{
		return group == ActiveGroup ? "explorer-option-selected" : "button-unselected";
	}

	void ActivatePage(ExplorerTab page)
	{
		ActivePage = page;
		Path = "35P10:\\Projects\\" + @ActiveGroup + '\\' + @ActivePage.Title;
	}

	void ActivateGroup(String group)
	{
		ActiveGroup = group;
	}
}